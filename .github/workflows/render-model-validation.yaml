# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
name: Model Validation

on:
  # push:
  #   branches: [main, master]
  #   paths-ignore:
  #     - '**.md'  # prevent md files (e.g., README.md) in any repo dir from trigering workflow
  #     - '**.bib'
  #     - '**.ya?ml'  # captures both .yml and .yaml
  #     - '**.png'
  #     # - '**.Rmd'
  #     - 'LICENSE'
  #     - '.gitignore'
  #     - '.gitattributes'
  # pull_request:
  #   branches: [master, dev]
  #   paths-ignore:
  #     - '**.md'  # prevent md files (e.g., README.md) in any repo dir from trigering workflow
  #     - '**.bib'
  #     - '**.ya?ml'  # captures both .yml and .yaml
  #     - '**.png'
  #     # - '**.Rmd'
  #     - 'LICENSE'
  #     - '.gitignore'
  #     - '.gitattributes'
  workflow_dispatch:  # also allow manual trigger, for testing purposes

jobs:
  validate-model:
    runs-on: ${{ matrix.config.os }}

    name: render model validation ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}

    env:
      #GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }} 
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'ver-0.2.1'
      # - run: git checkout HEAD^

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-renv@v2
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            devtools
            knitr
      
      - name: Render model validation Rmarkdown file
        run: |
          install.packages("rmarkdown")
          for (year in 2018:2020) {
            rmarkdown::render("inst/doc/ValidateModel.Rmd", output_dir = "inst/doc/output", output_file = paste0("ValidateModel_", year, ".md"))
          }
        shell: Rscript {0}
        
      - name: Commit model validation results
        run: |
          git fetch origin ver-0.2.1
          git pull origin ver-0.2.1
          git config user.name "GitHub Actions Bot"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add inst/doc/output/ValidateModel*.md
          git commit -m "Update model validation documents"
          git push origin ver-0.2.1
